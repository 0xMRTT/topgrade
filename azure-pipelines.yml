strategy:
  matrix:
    Mac:
      imageName: 'macos-10.13'
    Linux:
      imageName: 'ubuntu-16.04'
    Windows:
      imageName: 'vs2017-win2016'
      rustup_toolchain: stable
      working_directory: .

pool:
  vmImage: $(imageName)

steps:
  - script: |
      curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain $RUSTUP_TOOLCHAIN
      echo "##vso[task.setvariable variable=PATH;]$PATH:$HOME/.cargo/bin"
    displayName: Install rust
    condition: ne( variables['Agent.OS'], 'Windows_NT' )
  - script: |
      curl -sSf -o rustup-init.exe https://win.rustup.rs
      rustup-init.exe -y --default-toolchain %RUSTUP_TOOLCHAIN%
      echo "##vso[task.setvariable variable=PATH;]%PATH%;%USERPROFILE%\.cargo\bin"
    displayName: Windows install rust
    condition: eq( variables['Agent.OS'], 'Windows_NT' )
  - script: rustup component add clippy rustfmt
    displayName: install clipppy and rustfmt
  - task: CacheBeta@0
    inputs:
      key: |
        $(Agent.OS)
        $(Build.SourcesDirectory)/Cargo.lock
      path: '$(Pipeline.Workspace)/.cargo'

    displayName: 'Cache Cargo'
  - script: cargo fmt --all -- --check
    displayName: rustfmt
  - script: cargo build --all-features
    displayName: Cargo build
  - script: cargo clippy --all-features -- -D warnings
    displayName: clippy
  - script: cargo test --all-features
    displayName: Cargo test